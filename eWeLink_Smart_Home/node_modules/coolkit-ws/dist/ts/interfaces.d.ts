interface IConfigForApp {
    at: string;
    apikey: string;
    appid: string;
    region: 'cn' | 'us' | 'en' | 'as';
    userAgent: 'app';
    useTestEnv?: boolean;
}
interface IConfigForDevice {
    appid: string;
    region: 'cn' | 'us' | 'en' | 'as';
    apikey: string;
    chipid?: string;
    deviceid: string;
    userAgent: 'device';
    useTestEnv?: boolean;
}
export declare type IConfig = IConfigForDevice | IConfigForApp;
export interface IWsParams {
    [key: string]: any;
}
export interface IDeviceConfig {
    deviceid: string;
    ownerApikey: string;
    params: any;
}
export interface IQueryConfig extends IDeviceConfig {
    params: string[];
}
export interface IUpgradeConfig extends IDeviceConfig {
    params: {
        model: string;
        version: string;
        binList: IBinList[];
    };
}
interface IBinList {
    downloadUrl: string;
    digest?: string;
    name: string;
}
export interface IResponse {
    error: number;
    msg: string;
}
export interface IWsHandler {
    (wsResp: any): void;
}
export interface IDeviceResponse {
    error: number;
    deviceid: string;
    apikey: string;
    sequence: string;
    params?: any;
}
export interface ISendDeviceParams {
    action: 'upgrade' | 'update' | 'query';
    deviceid: string;
    apikey: string;
    userAgent: 'app' | 'device';
    sequence: string;
    params: any;
    selfApikey?: string;
}
export {};
